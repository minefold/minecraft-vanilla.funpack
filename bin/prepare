#!/usr/bin/env ruby

require 'json'
require 'erb'
require 'find'

root = File.expand_path File.join __FILE__, '../..'

# usage: prepare <world_dir> <settings_json_file>
# prepares the world to run
# before this runs, the world will be pulled down and stored at world_dir

def level_paths world_dir
  Dir.chdir world_dir do
    level_paths = []
    Find.find('.') do |path|
      if path =~ /\/level\.dat$/
        level_paths << File.dirname(path).gsub(/^\.\//, '')
      end
    end
    level_paths
  end
end

def level_path world_dir
  level_paths(world_dir).min
end

def settings json_file
  json_file ? JSON.parse(File.read(json_file)) : {}
end

def write_server_properties world_dir, level_name, options
  template = ERB.new(File.read('template/server.properties.erb'))
  File.write "#{world_dir}/server.properties", template.result(binding)
end

def download_server_jar url, world_dir
  puts `curl --silent --show-error -RL #{url} -o '#{world_dir}/server.jar'`
end

# args
world_dir = File.expand_path(ARGV.shift)
settings_json_file = ARGV.shift

settings = settings(settings_json_file)
requested_version = settings['options']['minecraft_version']

servers = {
  'HEAD' => 'https://s3.amazonaws.com/MinecraftDownload/launcher/minecraft_server.jar',
  '12w21b' => 'http://assets.minecraft.net/12w21b/minecraft_server.jar'
}

server_url = servers[requested_version]

abort "Unknown version: #{requested_version}" unless server_url

download_server_jar server_url, world_dir

write_server_properties world_dir, level_path(world_dir), settings
